---
#This role performs the steps to install BMI

- name: Create necessary directories
  file:
    state: directory
    group: "{{ lookup('env', 'USER') }}"
    owner: "{{ lookup('env', 'USER') }}"
    path: "{{ item }}"
    mode: 0775
  become: true
  with_items:
    - "/var/log/bmi/logs"
    - "/etc/bmi/pxelinux.cfg"

- name: Copy necessary files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ lookup('env', 'USER') }}" 
    group: "{{ lookup('env', 'USER') }}" 
    mode: 0775
  become: true
  with_items:
    - { src: '../../../bmi_config.cfg', dest: '/etc/bmi/bmi_config.cfg' }
    - { src: '../../../ims/ipxe.temp', dest: '/etc/bmi/ipxe_example.temp' }
    - { src: '../../../ims/mac.temp', dest: '/etc/bmi/pxelinux.cfg/mac_example.temp' }

- name: Install setup.py
  command: "python setup.py install"
  args:
    chdir: "{{playbook_dir}}/../../.."
  become: true

- name: Install cephlibs
  pip:
    name: python-cephlibs
  become: true

- name: Install sqlite3
  apt:
    name: sqlite3
  become: true
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Create database file
  copy:
    content: ""
    dest: "/etc/bmi/bmi.db"
    force: no
    group: "{{ lookup('env', 'USER') }}"
    owner: "{{ lookup('env', 'USER') }}"
    mode: 0775
  become: true

- stat:
    path: "/etc/bmi/bmi.db"
  register: db

- name: Bootstrap the database
  command: "{{ item }}"
  environment:
    HIL_USERNAME: hil
    HIL_PASSWORD: secret
  with_items:
    - bmi db ls
    - sqlite3 /etc/bmi/bmi.db "insert into project values (0, 'bmi_infra', 'bmi_network')"
  when: db.stat.size == 0
